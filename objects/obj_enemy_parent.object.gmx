<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>smokeSystem = part_system_create();
smokeType = part_type_create();

part_type_sprite(smokeType,spr_bullet,false,false,false);
part_type_alpha2(smokeType,1,0);
part_type_color2(smokeType,yellow,0);
part_type_speed(smokeType,1,1,0,0);
part_type_direction(smokeType,270,270,0,0);


canMove = true;
canShoot = true;
moveSpeed = 0;
maxSpeed = 4;
isDestroyed = false;
hp = 10;

changeHeightRange = 100; //If player is outside of this range, give chase
heightScale = 1; //scaling based on height
fire = 0;
fireRate = 10;
heightDiff = 0;
fovRange = 300;
fovAngle = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(smokeSystem);
part_type_destroy(smokeType);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*************** Height difference *****************/
heightDiff = global.height-depth;
if (heightDiff &gt; 300) {visible = false;} else {visible = true;}

if (heightDiff-changeHeightRange &lt; heightDiff &amp;&amp; heightDiff &lt; heightDiff+changeHeightRange) {
    depth = var_wipe(depth,global.height,100,0,1);
}
heightScale = (depth/global.height);
image_xscale = heightScale;
image_yscale = heightScale;
image_xscale = clamp(image_xscale,0,3);
image_yscale = clamp(image_yscale,0,3);

/*************** Dies *****************/
part_type_scale(smokeType,2+heightScale,2+heightScale);
if (!isDestroyed) {
    if (hp &lt; 5) {
        part_system_depth(smokeSystem,depth-1);
        part_particles_create(smokeSystem,x-1+irandom_range(-1,1),y-5,smokeType,10);
    }
    if (hp &lt; 0) {
        repeat(5) effect_create_above(ef_smoke,x,y,0.1,0);
        sprite_index = -1;
        mask_index = -1;
        alarm[0] = 90;
        isDestroyed = true;
    }
}

/*************** chase player *****************/
if (fire &lt;= 0) {fire++;}
if (instance_exists(obj_player)) {
    var turnRate = sign(angle_difference(direction,point_direction(obj_player.x,obj_player.y,x,y)));
    if (inViewRange(obj_player,fovAngle,fovRange)) {
        if ((-10 &lt;= heightDiff) &amp;&amp; (heightDiff &lt;= 10)) {
            if (irandom(30) == 0) {
                if (fire &gt; 0) {
                    fire -= fireRate;
                    shootBullet(x,y,5,image_angle);
                }
            }
        }
        moveSpeed = 2;
        direction += turnRate*2;
        fovAngle = 30;
    }
    else {
        direction += turnRate;
        //direction = var_wipe(direction,point_direction(obj_player.x,obj_player.y,x,y),100,0.01,0);
        moveSpeed = 4;
        fovAngle = 60;
    }
}
speed = var_wipe(speed,moveSpeed*heightScale,100,0.1,0);
image_angle = direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((other.shotFrom).object_index == obj_player) {
    var heightDiff = abs(other.depth-depth);
    
    if ((-10 &lt;= heightDiff) &amp;&amp; (heightDiff &lt;= 10)) {
        hp -= 1;
        instance_destroy(other);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
