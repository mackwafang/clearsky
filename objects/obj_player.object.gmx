<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-600</depth>
  <persistent>0</persistent>
  <parentName>obj_npc_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true;
canShoot = true;
moveSpeed = 2;
isAlly = true;
isDestroyed = false;

fire = 0;
fireRate = 7;

direction = 90;
image_angle = 90;
propellerIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>propellerIndex = (++propellerIndex) mod 7;
/*************** Shoot ***************/
if (canMove) {
    if (mouse_wheel_up() || keyboard_check(ord("W"))) {
        if (global.height &lt; -MIN_HEIGHT) {
            global.height += 3;
        }
    }
    if (mouse_wheel_down() || keyboard_check(ord("S"))) {
        if (global.height &gt; -MAX_HEIGHT) {
            global.height -= 3;
        }
    }
    depth = var_wipe(depth,global.height,100,0.05,0);
    
    x = var_wipe(x,mouse_x,100,moveSpeed/50,0);
    y = var_wipe(y,mouse_y,100,moveSpeed/50,0);
    
    x = clamp(x,0,room_width);
    y = clamp(y,0,room_height);
}

/*************** Fire ***************/
if (canShoot) {
    if (mouse_check_button(mb_left)) {
        if (fire &gt; 0) {
            fire -= fireRate;
            
            shootBullet(x+5,y,20,90);
            shootBullet(x-4,y,20,90);
        }
    }
}
image_speed = 0;
image_index = clamp(((mouse_x-x)/5)+15,0,29);
if (fire &lt;= 0) {fire++;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!(other.shotFrom).isAlly) {
    var heightDiff = abs(other.depth-depth);
    
    if ((-10 &lt;= heightDiff) &amp;&amp; (heightDiff &lt;= 10)) {

        instance_destroy(other);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_sprite_ext(spr_propeller,propellerIndex,x+lengthdir_x(8,direction),y+lengthdir_y(8,direction),1,1,direction,white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
